/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.6.RELEASE'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.6.RELEASE'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.el:javax.el-api:3.0.0'
    implementation 'org.glassfish.web:javax.el:2.2.6'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.15.Final'
    implementation 'org.hibernate.validator:hibernate-validator-annotation-processor:6.0.13.Final'
    implementation 'uk.com.robust-it:cloning:1.9.10'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.google.code.gson:gson:2.8.2'
}

application {
    // Define the main class for the application.
    mainClass = 'Java.Coding.Problems.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
